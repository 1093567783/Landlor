<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lym.mapper.user.RoleMapper">
  <resultMap id="BaseResultMap" type="com.lym.model.user.vo.RoleVO">
    <!--@mbg.generated-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="available" jdbcType="INTEGER" property="available" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <resultMap id="ResultRole" type="com.lym.model.shiro.Role">
    <!--@mbg.generated-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="roleName" />
    <collection property="permissions" ofType="com.lym.model.shiro.Permission">
      <id column="Pid" jdbcType="INTEGER" property="id" />
      <result column="permissionName" jdbcType="VARCHAR" property="permissionName" />
    </collection>
  </resultMap>
<select id="getRoleByUid" resultMap="ResultRole" parameterType="byte">
    SELECT r.id id, r.name, p.id Pid, p.permission_name permissionName FROM sys_role r INNER JOIN sys_role_user ru ON r.id = ru.rid
    INNER JOIN t_user u ON ru.uid = u.id INNER JOIN t_permission p ON p.role_id = r.id WHERE u.id = #{id}
</select>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, remark, available, createtime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from sys_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lym.model.user.dto.RoleDTO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_role (`name`, remark, available,
    createtime)
    values (#{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{available,jdbcType=INTEGER},
    #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.lym.model.user.dto.RoleDTO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="available != null">
        available,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        #{available,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lym.model.user.dto.RoleDTO">
    <!--@mbg.generated-->
    update sys_role
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lym.model.user.dto.RoleDTO">
    <!--@mbg.generated-->
    update sys_role
    set `name` = #{name,jdbcType=VARCHAR},
    remark = #{remark,jdbcType=VARCHAR},
    available = #{available,jdbcType=INTEGER},
    createtime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAvailable" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    from sys_role
    <if test="available!= null">
      where available = #{available,jdbcType=INTEGER}
    </if>
  </select>
  <select id="queryRoleIdsByUserId" resultType="java.lang.Integer">
    select rid from sys_role_user where uid=#{userId}
  </select>
  <select id="queryMenuIdsByRid" resultType="java.lang.Integer">
    select mid from sys_role_menu where rid = #{id}
    </select>
  <!-- 根据角色id 删除角色和菜单权限 -->
  <delete id="deleteRoleMenuByRid">
    delete from sys_role_menu where rid=#{value}
  </delete>


  <!-- 根据菜单id 删除 角色和菜单权限 -->
  <delete id="deleteRoleMenuByMid">
    delete from sys_role_menu where mid=#{value}
  </delete>

  <!-- 根据角色id 删除 用户角色 -->
  <delete id="deleteRoleUserByRid">
    delete from sys_role_user where rid=#{value}
  </delete>

  <!-- 根据用户id 删除 用户角色 -->
  <delete id="deleteRoleUserByUid">
    delete from sys_role_user where uid=#{value}
  </delete>

  <select id="selectPage" resultMap="BaseResultMap" parameterType="com.lym.model.user.dto.RoleDTO">
    select
    <include refid="Base_Column_List" />
    from sys_role
    <where>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        AND remark = #{remark,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <insert id="insertRoleMenu">
    insert into sys_role_menu
    (rid, mid) values
    <foreach collection="mids" item="item" index="index" separator=",">
      (#{rid},#{item.value})
    </foreach>
  </insert>
</mapper>