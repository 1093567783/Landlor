<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lym.mapper.user.UserMapper">

    <resultMap id="userVO" type="com.lym.model.user.vo.UserVO">
        <result column="id" property="id" javaType="java.lang.Byte" />
        <result column="manager_id" property="managerId" javaType="java.lang.Byte" />
        <result column="role_id" property="roleId" javaType="java.lang.Byte" />
        <result column="dept_id" property="deptId" javaType="java.lang.Byte" />
        <result column="user_name" property="userName" javaType="java.lang.String" />
        <result column="password" property="password" javaType="java.lang.String" />
        <result column="picture" property="picture" javaType="java.lang.String" />
        <result column="real_name" property="realName" javaType="java.lang.String" />
        <result column="phone" property="phone" javaType="java.lang.String" />
        <result column="email" property="email" javaType="java.lang.String" />
        <result column="join_time" property="joinTime" javaType="java.util.Date" />
        <result column="update_time" property="updateTime" javaType="java.util.Date" />
        <result column="sex" property="sex" javaType="java.lang.String" />
        <result column="title" property="deptName" javaType="java.lang.String" />
    </resultMap>
    <sql id="List_VO_Column_Result">
        tu.id,
        tu.role_id,
        tu.user_name,
        tu.password,
        tu.picture,
        tu.real_name,
        tu.phone,
        tu.email,
        tu.join_time,
        tu.sex,
        tu.update_time,
        tu.dept_id,
        tu.manager_id
    </sql>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, role_id, dept_id, user_name, `password`, real_name, picture, email, phone, sex,
        join_time, update_time,manager_id
    </sql>
    <select id="getUserByName" parameterType="string" resultMap="userVO">
    select <include refid="List_VO_Column_Result"/>
    from t_user tu
    where tu.user_name = #{userName}
    </select>

    <select id="findAllUser" resultMap="userVO" parameterType="com.lym.model.user.dto.UserDTO">
      SELECT <include refid="List_VO_Column_Result"/>,sd.title  FROM t_user tu LEFT JOIN sys_dept sd ON tu.dept_id = sd.id
       <where>
        <if test="userName != null">
            user_name LIKE '%${userName}%'
        </if>
        <if test="realName != null">
           AND real_name LIKE '%${realName}%'
        </if>
        <if test="deptId != null">
            AND tu.dept_id = #{deptId}
        </if>
       </where>
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="userVO">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List" />
        from t_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from t_user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lym.model.user.dto.UserDTO" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_user (role_id, dept_id, user_name,
        `password`, real_name, picture,
        email, phone, sex, join_time,
        update_time)
        values (#{roleId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{joinTime,jdbcType=DATE},
        #{updateTime,jdbcType=DATE})
    </insert>
    <insert id="saveUser" keyColumn="id" keyProperty="id" parameterType="com.lym.model.user.dto.UserDTO" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="deptId != null">
                dept_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="picture != null">
                picture,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="joinTime != null">
                join_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="managerId != null">
                manager_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="deptId != null">
                #{deptId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="picture != null">
                #{picture,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=CHAR},
            </if>
            <if test="joinTime != null">
                #{joinTime,jdbcType=DATE},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=DATE},
            </if>
            <if test="managerId != null">
                #{managerId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateUser" parameterType="com.lym.model.user.dto.UserDTO">
        <!--@mbg.generated-->
        update t_user
        <set>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="picture != null">
                picture = #{picture,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=CHAR},
            </if>
            <if test="joinTime != null">
                join_time = #{joinTime,jdbcType=DATE},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=DATE},
            </if>
            <if test="managerId != null">
                manager_id = #{managerId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lym.model.user.dto.UserDTO">
        <!--@mbg.generated-->
        update t_user
        set role_id = #{roleId,jdbcType=INTEGER},
        dept_id = #{deptId,jdbcType=INTEGER},
        user_name = #{userName,jdbcType=VARCHAR},
        `password` = #{password,jdbcType=VARCHAR},
        real_name = #{realName,jdbcType=VARCHAR},
        picture = #{picture,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        sex = #{sex,jdbcType=CHAR},
        join_time = #{joinTime,jdbcType=DATE},
        update_time = #{updateTime,jdbcType=DATE}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>